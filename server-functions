#!/bin/bash

export MAILSERVER_DATA_FILESYSTEM=${MAILSERVER_DATA_FILESYSTEM:-mailserver-data}
export MAILSERVER_DATA_MOUNTPOINT=${MAILSERVER_DATA_MOUNTPOINT:-/var/mail}
export MAILSERVER_CONFIGURATION_FILE=${MAILSERVER_CONFIGURATION_FILE:-/var/lib/mailu/mailu.env}
export MAILSERVER_TOOLS_URL_PREFIX=${MAILSERVER_TOOLS_URL_PREFIX:-https://raw.githubusercontent.com/jim-hanlon/m-s/main}

function instance:set-cname-records() {
    local ec2PublicHostname=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
    for cname in "${@}"; do
        local domainName=$(echo "${cname}" | sed -E 's/^[^\.]*\.//')
        local hostedZoneId=$(aws route53 list-hosted-zones --output text | grep "${domainName}" | awk '{print $3}' | cut -d/ -f3)
        local result=$(aws route53 change-resource-record-sets --hosted-zone-id "${hostedZoneId}" --change-batch file:///dev/stdin <<END_OF_JSON
            {
              "Changes": [
                {
                  "Action": "UPSERT",
                  "ResourceRecordSet": {
                    "Name": "${cname}",
                    "Type": "CNAME",
                    "TTL": 300,
                    "ResourceRecords": [
                      {
                        "Value": "${ec2PublicHostname}"
                      }
                    ]
                  }
                }
              ]
            }
END_OF_JSON
        )
        logger "${0}: UPSERT ${cname} to ${ec2PublicHostname}: ${result}"
    done
}


function mailserver:initialize() {
    mailserver:mount-mailserver-data
    mailserver:install_mailu_configuration
    mailserver:set-cnames
}


function mailserver:install_mailu_configuration() {
    local mailuKey=$(head /dev/urandom | tr -dc A-Z0-9 | head -c 16)
    local version=$(( $(ls -1 "${MAILSERVER_CONFIGURATION_FILE}*" 2>/dev/null | grep -E '\.env(.[1-9][0-9]*)?$' | wc -l ) + 1 ))
    [[ -f "${MAILSERVER_CONFIGURATION_FILE}" ]] && cp "${MAILSERVER_CONFIGURATION_FILE}" "${MAILSERVER_CONFIGURATION_FILE}${version}"
    cat "${MAILSERVER_CONFIGURATION_FILE}${version}" | sed -E 's/^SECRET_KEY=.*$/SECRET_KEY='${mailuKey}'/' > "${MAILSERVER_CONFIGURATION_FILE}"
}


function mailserver:mount-mailserver-data() {
    local availabilityZone=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq '.availabilityZone' | tr -d '"')
    local region=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq '.region' | tr -d '"')
    local fileSystemId=$(aws --region ${region} efs describe-file-systems | \
                         jq '.FileSystems | select(.[].Tags[].Key == "Name") | select(.[].Tags[].Value == "'${MAILSERVER_DATA_FILESYSTEM}'") | .[].FileSystemId' | tr -d '"')
    local fileSystemName="${fileSystemId}.efs.${region}.amazonaws.com" 
    echo "${fileSystemName}:/ ${MAILSERVER_DATA_MOUNTPOINT} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
    mkdir -p "${MAILSERVER_DATA_MOUNTPOINT}"
    chown nobody:nogroup "${MAILSERVER_DATA_MOUNTPOINT}"
    mount "${MAILSERVER_DATA_MOUNTPOINT}"
}


function mailserver:set-cnames() {
    instance:set-cname-records $(grep HOSTNAMES "${MAILSERVER_CONFIGURATION_FILE}" | cut -d= -f2 | cut -d, --output-delimiter ' ' -f1-)
}


